definitions:
  model.Account:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      updatedAt:
        type: string
    type: object
  model.AccountPatch:
    properties:
      firstName:
        type: string
      lastName:
        type: string
    type: object
  model.AccountSignupPayload:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
    type: object
  model.AddRepositoryPayload:
    properties:
      name:
        type: string
      url:
        type: string
    type: object
  model.CreateScanPayload:
    properties:
      branch:
        type: string
      commit:
        type: string
    type: object
  model.Error:
    properties:
      code:
        type: string
      detailedError:
        type: string
      message:
        type: string
      validationErrors:
        items:
          $ref: '#/definitions/model.ValidationError'
        type: array
    type: object
  model.Finding:
    properties:
      location:
        $ref: '#/definitions/model.FindingLocation'
      metadata:
        $ref: '#/definitions/model.FindingMetadata'
      type:
        type: string
    type: object
  model.FindingLocation:
    properties:
      path:
        type: string
      positions:
        $ref: '#/definitions/model.FindingPosition'
    type: object
  model.FindingMetadata:
    properties:
      description:
        type: string
      severity:
        type: string
    type: object
  model.FindingPosition:
    properties:
      begin:
        $ref: '#/definitions/model.PositionIndex'
    type: object
  model.PositionIndex:
    properties:
      line:
        type: integer
    type: object
  model.Repository:
    properties:
      accountId:
        type: integer
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
      url:
        type: string
    type: object
  model.RepositoryPatch:
    properties:
      name:
        type: string
      url:
        type: string
    type: object
  model.Scan:
    properties:
      branch:
        type: string
      commit:
        type: string
      createdAt:
        type: string
      findings:
        items:
          $ref: '#/definitions/model.Finding'
        type: array
      finishedAt:
        type: string
      id:
        type: integer
      message:
        type: string
      repoId:
        type: integer
      scanningAt:
        type: string
      status:
        type: string
      type:
        type: string
    type: object
  model.ValidationError:
    properties:
      code:
        type: string
      field:
        type: string
    type: object
info:
  contact: {}
  title: Server API
paths:
  /api/accounts/:accountID:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Return account info
      tags:
      - Account
    patch:
      consumes:
      - application/json
      parameters:
      - description: Payload
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/model.AccountPatch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Update account info
      tags:
      - Account
  /api/accounts/:accountID/repos:
    get:
      parameters:
      - in: query
        name: isDesc
        type: boolean
      - in: query
        name: orderBy
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: perPage
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Repository'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Return list of repositories for an account
      tags:
      - Repository
    post:
      consumes:
      - application/json
      parameters:
      - description: Payload
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/model.AddRepositoryPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Repository'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Add a repository
      tags:
      - Repository
  /api/accounts/signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: Payload
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/model.AccountSignupPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Signup
      tags:
      - Account
  /api/repos/:repoID:
    delete:
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Delete a repository
      tags:
      - Repository
    patch:
      consumes:
      - application/json
      parameters:
      - description: Payload
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/model.RepositoryPatch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Repository'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Update repository info
      tags:
      - Repository
  /api/repos/:repoID/scans:
    get:
      parameters:
      - in: query
        name: branch
        type: string
      - in: query
        name: isDesc
        type: boolean
      - in: query
        name: orderBy
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: perPage
        type: integer
      - in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Scan'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Return list of scans of a repository
      tags:
      - Scan
    post:
      consumes:
      - application/json
      parameters:
      - description: Payload
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/model.CreateScanPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Scan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Add a repository
      tags:
      - Scan
  /api/scans/:scanID:
    put:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Scan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Re-run a scan
      tags:
      - Scan
swagger: "2.0"
